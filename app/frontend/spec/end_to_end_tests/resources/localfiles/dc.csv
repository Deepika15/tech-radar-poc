"name","ring","quadrant","isNew","description"
Recoil,Assess,languages-and-frameworks,TRUE,"<p>More and more teams using <a href=""/radar/languages-and-frameworks/react-js"">React</a> are reevaluating their options for state management, something we also mention in our reassessment of <a href=""/radar/languages-and-frameworks/redux"">Redux</a>. Now, Facebook — the creators of React — have published <strong><a href=""https://recoiljs.org/"">Recoil</a></strong>, a new framework for managing state, which came out of an internal application that had to deal with large amounts of data. Even though we currently do not have much practical experience with Recoil, we see its potential and promise. The API is simple and easy to learn; it feels like idiomatic React. Unlike other approaches, Recoil provides an efficient and flexible way to have state shared across an application: it supports dynamically created state by derived data and queries as well as app-wide state observation without impairing code splitting.</p>"
Snorkel,Assess,languages-and-frameworks,TRUE,"<p>Modern ML models are very complex and require massive amounts of labeled training data sets to learn from. <strong><a href=""https://www.snorkel.org/"">Snorkel</a></strong> started at the Stanford AI lab with the realization that manually labeling data is very expensive and often not feasible. Snorkel allows us to label training data programmatically via the creation of labeling functions. Snorkel employs supervised learning Techniques to assess the accuracies and correlations of these labeling functions, and then reweighs and combines their output labels, leading to high-quality training labels. The creators of Snorkel have since come out with a commercial platform called <a href=""https://www.snorkel.ai/"">Snorkel Flow</a>. While Snorkel itself is no longer actively developed, it's still significant for its ideas on the use of weakly supervised methods to label data.</p>"
Streamlit,Assess,languages-and-frameworks,TRUE,"<p><a href=""https://www.streamlit.io/""><strong>Streamlit</strong></a> is an open-source application framework in Python used by data scientists for building good-looking data visualization applications. Streamlit stands out from competitors such as Dash with its focus on rapid prototyping and support for a wide range of visualization libraries, including <a href=""https://plotly.com/"">Plotly</a> and <a href=""/radar/tools/bokeh"">Bokeh</a>. For data scientists who need quick showcases during the experimentation cycle, Streamlit is a solid choice. We're using it in a few projects and like how we can put together interactive visualizations with very little effort.</p>"
Svelte,Assess,languages-and-frameworks,TRUE,"<p>We continue to see new front-end JavaScript frameworks, and <strong><a href=""https://svelte.dev/"">Svelte</a></strong> stands out as a promising new component framework. Unlike other frameworks that leverage the virtual DOM, Svelte compiles your code into vanilla framework-less JavaScript code that surgically updates the DOM directly. However, it's only a component framework; if you're planning to build feature-rich applications, consider assessing <a href=""https://sapper.svelte.dev/"">Sapper</a> together with Svelte.</p>"
SWR,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://github.com/vercel/swr"">SWR</a></strong> is a <a href=""/radar/languages-and-frameworks/react-hooks"">React Hooks</a> library for fetching remote data. It implements the <a href=""https://tools.ietf.org/html/rfc5861"">stale-while-revalidate</a> HTTP caching strategy. SWR first returns data from cache (stale), then sends the fetch request (revalidate) and finally refreshes the values with the up-to-date response. Components receive a stream of data, first stale and then fresh, constantly and automatically. Our developers have had a good experience using SWR, dramatically improving the user experience with always having data on the screen. However, we caution teams to only use SWR caching strategy when appropriate for an application to return stale data. Note that <a href=""https://tools.ietf.org/html/rfc2616"">HTTP</a> requires that caches respond to a request with the most up-to-date response held that is appropriate to the request, and only in <em>carefully considered circumstances</em> is a stale response allowed to be returned.</p>"
Testing Library,Assess,languages-and-frameworks,TRUE,"<p><strong><a href=""https://testing-library.com/"">Testing Library</a></strong> is a family of packages for testing applications in numerous frameworks such as <a href=""/radar/languages-and-frameworks/react-js"">React</a>, <a href=""/radar/languages-and-frameworks/vue-js"">Vue</a>, <a href=""/radar/languages-and-frameworks/react-native"">React Native</a> and <a href=""/radar/languages-and-frameworks/angular"">Angular</a> among others. This set of libraries helps you test UI components in a user-centric way by encouraging you to test user behavior rather than implementation details, such as the presence of elements in the UI at a certain moment in time. One of the benefits of this mindset is more reliable tests, and this is what we call out as its main differentiator. We recommend you assess this family of libraries when testing your web applications in any framework. Although our direct experience is limited to <a href=""/radar/languages-and-frameworks/react-testing-library"">React Testing Library</a> and Angular Testing Library, we've been impressed with what we've seen.</p>"
